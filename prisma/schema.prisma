// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Original {
  id        Int      @id @default(autoincrement())
  gender    String
  url       String
  filename  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int?
}

model Generated {
  id        Int      @id @default(autoincrement())
  gender    String
  url       String
  filename  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int?
}

model User {
  id            Int      @id @default(autoincrement())
  password      String
  email         String   @unique
  name          String
  paymentsCount Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Payments {
  id        Int      @id @default(autoincrement())
  payName   String
  email     String   @unique
  amount    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlaceForRec {
  id              Int      @id @default(autoincrement())
  isHotplace      Boolean?
  userId          Int
  isAdvertisement Boolean?
  title           String
  description     String
  contentTypeId   Int
  contentId       Int
  x               Float
  y               Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Diary {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  location      String
  userId        Int
  imageSrc      String?
  placeForRecId Int
  result        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  diaryId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Episode {
  id        Int      @id @default(autoincrement())
  title     String?
  content   String?
  userId    Int
  urls      String[]
  contents  String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
